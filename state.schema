{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "state",
    "description": "all encompassing state of the AGV. Internal Document version: 5.0.0",
    "documentVersion": "5.0.0",
    "subtopic": "/state",
    "type": "object",
    "properties": {
        "headerId": {
            "type": "integer",
            "description": "headerId of the message. The headerId is defined per topic and incremented by 1 with each sent (but not necessarily received) message."
        },
        "timestamp": {
            "type": "string",
            "description": "Timestamp in ISO8601 format.",
            "examples": [
                "1991-03-11T11:40:03.12Z"
            ]
        },
        "version": {
            "type": "string",
            "description": "Version of the protocol [Major].[Minor].[Patch]",
            "examples": [
                "1.3.2"
            ]
        },
        "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the AGV"
        },
        "serialNumber": {
            "type": "string",
            "description": "Serial number of the AGV."
        },
        "orderId": {
            "type": "string",
            "description": "Unique order identification of the current order or the previous finished order. The orderId is kept until a new order is received. Empty string (â€œâ€) if no previous orderId is available. "
        },
        "orderUpdateId": {
            "type": "integer",
            "description": "Order Update Identification to identify that an order update has been accepted by the AGV. â€œ0â€ if no previous orderUpdateId is available."
        },
        "zoneSetId": {
            "type": "string",
            "description": "Unique ID of the zone set that the AGV currently uses for path planning. Must be the same as the one used in the order, otherwise the AGV is to reject the order.\nOptional: If the AGV does not use zones, this field can be omitted."
        },
        "lastNodeId": {
            "type": "string",
            "description": "nodeID of last reached node or, if AGV is currently on a node, current node (e. g. â€œnode7â€). Empty string (â€œâ€) if no lastNodeId is available."
        },
        "lastNodeSequenceId": {
            "type": "integer",
            "description": "sequenceId of the last reached node or, if the AGV is currently on a node, sequenceId of current node.\nâ€œ0â€ if no lastNodeSequenceId is available. "
        },
        "driving": {
            "type": "boolean",
            "description": "True: indicates that the AGV is driving and/or rotating. Other movements of the AGV (e.g. lift movements) are not included here.\nFalse: indicates that the AGV is neither driving nor rotating "
        },
        "paused": {
            "type": "boolean",
            "description": "True: AGV is currently in a paused state, either because of the push of a physical button on the AGV or because of an instantAction. The AGV can resume the order.\nFalse: The AGV is currently not in a paused state."
        },
        "newBaseRequest": {
            "type": "boolean",
            "description": "True: AGV is almost at the end of the base and will reduce speed if no new base is transmitted. Trigger for MC to send ne base\nFalse: no base update required "
        },
        "distanceSinceLastNode": {
            "type": "number",
            "description": "Used by line guided vehicles to indicate the distance it has been driving past the â€žlastNodeIdâ€œ.\nDistance is in meters"
        },
        "operatingMode": {
            "type": "string",
            "description": "Current operating mode of the AGV.",
            "enum": [
                "AUTOMATIC",
                "SEMIAUTOMATIC",
                "MANUAL",
                "SERVICE",
                "TEACHIN"
            ]
        },
        "nodeStates": {
            "type": "array",
            "description": "Information about the nodes the AGV still has to drive over. Empty list if idle.",
            "items": {
                "type": "object",
                "title": "nodeState",
                "properties": {
                    "nodeId": {
                        "type": "string",
                        "description": "Unique node identification"
                    },
                    "sequenceId": {
                        "type": "integer",
                        "description": "sequenceId of the node."
                    },
                    "nodeDescription": {
                        "type": "string",
                        "description": "Verbose node description"
                    },
                    "nodePosition": {
                        "type": "object",
                        "title": "nodePosition",
                        "description": "Node position. The object is defined in chapter 5.4 Topic: Order (from master control to AGV).\nOptional:\nMaster control has this information. Can be sent additionally, e. g. for debugging purposes. ",
                        "properties": {
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "theta": {
                                "type": "number"
                            },
                            "mapId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "x",
                            "y",
                            "theta",
                            "mapId"
                        ]
                    },
                    "released": {
                        "type": "boolean",
                        "description": "True: indicates that the node is part of the base. False: indicates that the node is part of the horizon."
                    }
                },
                "required": [
                    "nodeId",
                    "released",
                    "sequenceId"
                ]
            }
        },
        "edgeStates": {
            "type": "array",
            "description": "Information about the edges the AGV still has to drive over. Empty list if the AGV is idle.",
            "items": {
                "type": "object",
                "title": "edgeState",
                "properties": {
                    "edgeId": {
                        "type": "string",
                        "description": "Unique edge identification"
                    },
                    "sequenceId": {
                        "type": "integer",
                        "description": "sequenceId of the edge."
                    },
                    "edgeDescription": {
                        "type": "string",
                        "description": "Verbose Edge description"
                    },
                    "released": {
                        "type": "boolean",
                        "description": "True: Edge is part of base. False: Edge is part of horizon."
                    },
                    "trajectory": {
                        "type": "object",
                        "description": "The trajectory is to be communicated as a NURBS and is defined in chapter 5.4 Topic: Order (from master control to AGV).\nTrajectory segments are from the point where the AGV starts to enter the edge until the point where it reports that the next node was traversed. ",
                        "properties": {
                            "degree": {
                                "type": "integer",
                                "description": "The degree of the NURBS."
                            },
                            "knotVector": {
                                "type": "array",
                                "description": "Sequence of parameter values that determine where and how the control points affect the NURBS curve. knotVector has size of number of control points + degree + 1",
                                "items": {
                                    "type": "number",
                                    "maximum": 1.0,
                                    "minimum": 0.0
                                }
                            },
                            "controlPoints": {
                                "type": "array",
                                "description": "List of JSON controlPoint objects defining the control points of the NURBS. This includes the start and end point.",
                                "items": {
                                    "type": "object",
                                    "title": "controlPoint",
                                    "properties": {
                                        "x": {
                                            "type": "number"
                                        },
                                        "y": {
                                            "type": "number"
                                        },
                                        "weight": {
                                            "type": "number",
                                            "description": "The weight with which this control point pulls no the curve.\nWhen not defined, the default will be 1.0."
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "weight"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "degree",
                            "knotVector",
                            "controlPoints"
                        ]
                    }
                },
                "required": [
                    "edgeId",
                    "sequenceId",
                    "released"
                ]
            }
        },
        "agvPosition": {
            "type": "object",
            "title": "agvPosition",
            "description": "The AGVs position",
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                },
                "theta": {
                    "type": "number"
                },
                "mapId": {
                    "type": "string"
                },
                "mapDescription": {
                    "type": "string"
                },
                "positionInitialized": {
                    "type": "boolean",
                    "description": "True if the AGVs position is initialized, false, if position is not initizalized."
                },
                "localizationScore": {
                    "type": "number",
                    "description": "Describes the quality of the localization and therefore, can be used e. g. by SLAM-AGVs to describe how accurate the current position information is.\n0.0: position unknown\n1.0: position known\nOptional for vehicles that cannot estimate their localization score.\nOnly for logging and visualization purposes",
                    "minimum": 0.0,
                    "maximum": 1.0
                },
                "deviationRange": {
                    "type": "number",
                    "description": "Value for position deviation range in meters. Can be used if the AGV is able to derive it."
                }
            },
            "required": [
                "x",
                "y",
                "theta",
                "mapId",
                "positionInitialized"
            ]
        },
        "velocity": {
            "type": "object",
            "title": "velocity",
            "description": "The AGVs velocity in vehicle coordinates",
            "properties": {
                "vx": {
                    "type": "number"
                },
                "vy": {
                    "type": "number"
                },
                "omega": {
                    "type": "number"
                }
            }
        },
        "loads": {
            "type": "array",
            "description": "Array for information about the loads that an AGV currently carries, if the AGV has any information about them. This array is optional: if an AGV cannot reason about its load state, it shall not send this field. If an empty field is sent, MC is to assume that the AGV can reason about its load state and that the AGV currently does not carry a load.",
            "items": {
                "type": "object",
                "description": "Load object that describes the load if the AGV has information about it.",
                "title": "load",
                "properties": {
                    "loadId": {
                        "type": "string",
                        "description": "Unique identification number of the load (e. g. barcode or RFID)\nEmpty field if the AGV can identify the load but didnâ€™t identify the load yet.\nOptional if the AGV has cannot identify the load."
                    },
                    "loadType": {
                        "type": "string"
                    },
                    "loadPosition": {
                        "type": "string",
                        "description": "Indicates which load handling/carrying unit of the AGV is used, e. g. in case the AGV has multiple spots/positions to carry loads.\nFor example: â€œfrontâ€, â€œbackâ€, â€œpositionC1â€, etc.\nOptional for vehicles with only one loadPosition."
                    },
                    "boundingBoxReference": {
                        "type": "object",
                        "description": "This point describes the loads position on the AGV in the vehicle coordinates. The boundingBoxReference point is in the middle of the footprint of the load, so length/2 and width/2.",
                        "properties": {
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "z": {
                                "type": "number"
                            },
                            "theta": {
                                "type": "number"
                            }
                        },
                        "required": [
                            "x",
                            "y",
                            "z"
                        ]
                    },
                    "loadDimensions": {
                        "type": "object",
                        "title": "loadDimensions",
                        "description": "Dimensions of the loadâ€™s bounding box in meters. ",
                        "properties": {
                            "length": {
                                "type": "number",
                                "description": "Absolute length of the loads bounding box in meter."
                            },
                            "width": {
                                "type": "number",
                                "description": "Absolute width of the loads bounding box in meter."
                            },
                            "height": {
                                "type": "number",
                                "description": "Absolute height of the loads bounding box in meter.\nOptional:\nSet value only if known."
                            }
                        },
                        "required": [
                            "length",
                            "width"
                        ]
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of load in kg"
                    }
                },
                "required": []
            }
        },
        "actionStates": {
            "type": "array",
            "description": "Contains a list of the current actions and the actions which are yet to be finished. This may include actions from previous nodes that are still in progress\nWhen an action is completed, an updated state message is published with actionStatus set to finished and if applicable with the corresponding resultDescription. The actionStates are kept until a new order is received.",
            "items": {
                "type": "object",
                "title": "actionState",
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "Unique actionId",
                        "examples": [
                            "blink_123jdaimoim234"
                        ]
                    },
                    "actionType": {
                        "type": "string",
                        "description": "actionType of the action.\nOptional: Only for informational or visualization purposes. Order knows the type."
                    },
                    "actionDescription": {
                        "type": "string",
                        "description": "Additional information on the action."
                    },
                    "actionStatus": {
                        "type": "string",
                        "description": "waiting: waiting for trigger\nfailed: action could not be performed.",
                        "enum": [
                            "waiting",
                            "initializing",
                            "running",
                            "finished",
                            "failed"
                        ]
                    },
                    "resultDescription": {
                        "type": "string",
                        "description": "Description of the result, e.g. the result of a rfid-read."
                    }
                },
                "required": [
                    "actionId",
                    "actionStatus"
                ]
            }
        },
        "batteryState": {
            "type": "object",
            "title": "batteryState",
            "description": "All information relating to the battery.",
            "properties": {
                "batteryCharge": {
                    "type": "number",
                    "description": "State of Charge:\nIf AGV only provides values for good or bad battery levels, these will be indicated as 20% (bad) and 80% (good)."
                },
                "batteryVoltage": {
                    "type": "number",
                    "description": "Battery voltage"
                },
                "batteryHealth": {
                    "type": "number",
                    "description": "State of health in percent."
                },
                "charging": {
                    "type": "boolean",
                    "description": "If true: Charging in progress."
                },
                "reach": {
                    "type": "number",
                    "description": "estimated reach with actual State of Charge"
                }
            },
            "required": [
                "batteryCharge",
                "charging"
            ]
        },
        "errors": {
            "type": "array",
            "title": "Errors",
            "description": "Array of errors. Errors are kept until resolution.",
            "items": {
                "type": "object",
                "title": "Error",
                "properties": {
                    "errorType": {
                        "type": "string",
                        "description": "Type of error."
                    },
                    "errorReferences": {
                        "type": "array",
                        "title": "errorReferences",
                        "items": {
                            "type": "object",
                            "title": "errorReference",
                            "description": "Object that holds the error reference (e.g. orderId, orderUpdateId, actionId...) as key-value pairs.",
                            "properties": {
                                "referenceKey": {
                                    "type": "string"
                                },
                                "referenceValue": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "referenceKey",
                                "referenceValue"
                            ]
                        }
                    },
                    "errorDescription": {
                        "type": "string",
                        "description": "Verbose description of error."
                    },
                    "errorLevel": {
                        "type": "string",
                        "description": "warning: AGV is ready to drive without human intervention \n fatal: AGV is not in running condition.",
                        "enum": [
                            "WARNING",
                            "FATAL"
                        ]
                    }
                }
            },
            "required": [
                "errorType",
                "errorLevel"
            ]
        },
        "information": {
            "type": "array",
            "title": "Information",
            "description": "Array of information messages. Messages are only for visualization/debugging. There's no specification when these messages are deleted.",
            "items": {
                "type": "object",
                "title": "Information",
                "properties": {
                    "infoType": {
                        "type": "string",
                        "description": "Type of Information."
                    },
                    "infoReferences": {
                        "type": "array",
                        "title": "infoReferences",
                        "items": {
                            "type": "object",
                            "title": "infoReference",
                            "description": "Object that holds the info reference (e.g. orderId, orderUpdateId, actionId...) as key-value pairs.",
                            "properties": {
                                "referenceKey": {
                                    "type": "string"
                                },
                                "referenceValue": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "referenceKey",
                                "referenceValue"
                            ]
                        }
                    },
                    "infoDescription": {
                        "type": "string",
                        "description": "Verbose description of error."
                    },
                    "infoLevel": {
                        "type": "string",
                        "description": "Type of information",
                        "enum": [
                            "INFO",
                            "DEBUG"
                        ]
                    }
                }
            },
            "required": [
                "infoType",
                "infoLevel"
            ]
        },
        "safetyState": {
            "type": "object",
            "title": "safetyStatus",
            "description": "Object that holds information about the safety status",
            "properties": {
                "eStop": {
                    "type": "string",
                    "description": "autoAck, manual, remote, none",
                    "enum": [
                        "autoAck",
                        "manual",
                        "remote",
                        "none"
                    ]
                },
                "fieldViolation": {
                    "type": "boolean",
                    "description": "Protective field violation"
                }
            },
            "required": [
                "eStop",
                "fieldViolation"
            ]
        }
    },
    "required": [
        "headerId",
        "timestamp",
        "version",
        "manufacturer",
        "serialNumber",
        "orderId",
        "orderUpdateId",
        "lastNodeId",
        "lastNodeSequenceId",
        "nodeStates",
        "edgeStates",
        "driving",
        "actionStates",
        "batteryState",
        "operatingMode",
        "errors",
        "safetyState"
    ]
}
